{"ast":null,"code":"var _jsxFileName = \"/Users/saurabhghatnekar/Documents/SaurabhWorks/web3-angel/src/Components/Jobs/Quiz.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"./quiz.module.css\";\nimport { Timer } from \"./Timer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst quizData = [{\n  id: 0,\n  question: `Node.js is________Language.`,\n  options: [`Server Side`, `Client Side`, `Both`],\n  answer: `Server Side`\n}, {\n  id: 1,\n  question: `How Node.js modules are available externally?`,\n  options: [`module.spread`, `module.expose`, `module.exports`],\n  answer: `module.exports`\n}, {\n  id: 2,\n  question: `Duplication of data is called________.`,\n  options: [`Consistency`, `Redundancy`, `Inconsistency`],\n  answer: `Redundancy`\n}, {\n  id: 3,\n  question: `Which method returns the current working directory of the process?`,\n  options: [`process.cwd();`, `cwd();`, `pwd();`],\n  answer: `cwd();`\n}, {\n  id: 4,\n  question: `Which of the following will help to maintain unique record in the table?`,\n  options: [`Foreign Key`, `Composite Key`, `Primary Key`],\n  answer: `Primary Key`\n}];\n\nfunction Quiz() {\n  _s();\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [myAnswer, setMyAnswer] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [score, setScore] = useState(0);\n  const [disabled, setDisabled] = useState(true);\n  const [isEnd, setIsEnd] = useState(false);\n  const [questions, setQuestions] = useState('');\n  const [answer, setAnswer] = useState('');\n\n  const loadQuizData = () => {\n    setQuestions(quizData[currentQuestion].question);\n    setAnswer(quizData[currentQuestion].answer);\n    setOptions(quizData[currentQuestion].options);\n  };\n\n  useEffect(() => {\n    loadQuizData();\n  }, [currentQuestion]);\n\n  const nextQuestionHandler = () => {\n    if (myAnswer === answer) {\n      setScore(score + 1);\n    }\n\n    setCurrentQuestion(prev => prev + 1);\n    console.log(currentQuestion);\n  };\n\n  const checkAnswer = answer => {\n    setMyAnswer(answer);\n    setDisabled(false);\n  };\n\n  const finishHandler = () => {\n    if (currentQuestion === quizData.length - 1) {\n      setIsEnd(true);\n    }\n\n    if (myAnswer === answer) {\n      setScore(score + 1);\n    }\n  };\n\n  if (isEnd) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.result,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Assessment over, Your final score is \", score, \" points \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"The correct answers for the questions are-\", /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: quizData.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: styles.li,\n            children: item.answer\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.app,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: `Questions ${currentQuestion + 1}  out of ${quizData.length}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [questions, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: myAnswer === option ? styles.selected : null,\n          onClick: () => checkAnswer(option),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), currentQuestion < quizData.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        disabled: disabled,\n        onClick: nextQuestionHandler,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), currentQuestion === quizData.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        onClick: finishHandler,\n        children: \"Finish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Quiz, \"Q7sYOzNmXfOMxCI4szEvHWEXDx8=\");\n\n_c = Quiz;\nexport { Quiz };\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/saurabhghatnekar/Documents/SaurabhWorks/web3-angel/src/Components/Jobs/Quiz.jsx"],"names":["React","useEffect","useState","styles","Timer","quizData","id","question","options","answer","Quiz","currentQuestion","setCurrentQuestion","myAnswer","setMyAnswer","setOptions","score","setScore","disabled","setDisabled","isEnd","setIsEnd","questions","setQuestions","setAnswer","loadQuizData","nextQuestionHandler","prev","console","log","checkAnswer","finishHandler","length","result","map","item","index","li","app","option","selected","button"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styles from \"./quiz.module.css\"\nimport {Timer} from \"./Timer\"\nconst quizData = [\n  {\n    id: 0,\n    question: `Node.js is________Language.`,\n    options: [`Server Side`, `Client Side`, `Both`],\n    answer: `Server Side`\n  },\n  {\n    id: 1,\n    question: `How Node.js modules are available externally?`,\n    options: [`module.spread`, `module.expose`, `module.exports`],\n    answer: `module.exports`\n  },\n  {\n    id: 2,\n    question: `Duplication of data is called________.`,\n    options: [`Consistency`, `Redundancy`, `Inconsistency`],\n    answer: `Redundancy`\n  },\n  {\n    id: 3,\n    question: `Which method returns the current working directory of the process?`,\n    options: [`process.cwd();`, `cwd();`, `pwd();`],\n    answer: `cwd();`\n  },\n  {\n    id: 4,\n    question: `Which of the following will help to maintain unique record in the table?`,\n    options: [`Foreign Key`, `Composite Key`, `Primary Key`],\n    answer: `Primary Key`\n  },\n];\n\nfunction Quiz() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [myAnswer, setMyAnswer] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [score, setScore] = useState(0);\n  const [disabled, setDisabled] = useState(true);\n  const [isEnd, setIsEnd] = useState(false);\n\n  const [questions, setQuestions] = useState('');\n  const [answer, setAnswer] = useState('');\n\n  const loadQuizData = () => {\n    setQuestions(quizData[currentQuestion].question);\n    setAnswer(quizData[currentQuestion].answer);\n    setOptions(quizData[currentQuestion].options);\n  };\n\n  useEffect(() => {\n    loadQuizData();\n  }, [currentQuestion])\n  \n  const nextQuestionHandler = () => {\n\n    if (myAnswer === answer) {\n      setScore(score + 1);\n    }\n\n    setCurrentQuestion(prev=>prev+1);\n    console.log(currentQuestion);\n  };\n\n  const checkAnswer = (answer) => {\n    setMyAnswer(answer);\n    setDisabled(false);\n  };\n\n  const finishHandler = () => {\n    if (currentQuestion === quizData.length - 1) {\n      setIsEnd(true);\n    }\n    if (myAnswer === answer) {\n      setScore(score + 1);\n    }\n  }\n\n  if (isEnd) {\n    return (\n      <div className={styles.result}>\n        <h3>Assessment over, Your final score is {score} points </h3>\n        <div>\n          The correct answers for the questions are-\n          <ol>\n            {quizData.map((item, index) => (\n              <li className={styles.li}  key={index}>{item.answer}</li>\n            ))}\n          </ol>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className={styles.app}>\n        <div>\n        <span>{`Questions ${currentQuestion + 1}  out of ${quizData.length}`}</span>\n        <Timer></Timer>\n        </div>\n        <h1>{questions} </h1>\n        <div>\n        {options.map((option,index) => (\n          <p\n            key={index}\n            className={myAnswer === option ? styles.selected : null}\n            onClick={() => checkAnswer(option)}\n          >\n            {option}\n          </p>\n        ))}\n        </div>\n        {currentQuestion < quizData.length - 1 && (\n          <button\n            className={styles.button}\n            disabled={disabled}\n            onClick={nextQuestionHandler}\n          >\n            Next\n          </button>\n        )}\n        \n        {currentQuestion === quizData.length - 1 && (\n          <button className={styles.button} onClick={finishHandler}>\n            Finish\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport {Quiz};\n"]},"metadata":{},"sourceType":"module"}